<Application x:Class="Google_Drive_Organizer_V3.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Google_Drive_Organizer_V3"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="ApplicationDictionary"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:extension ="clr-namespace:Google_Drive_Organizer_V3"
                    >
            <sys:Double x:Key="ScaleRatio">1.05</sys:Double>
            <SolidColorBrush x:Key="HoverColor" Color="#95d5b2"></SolidColorBrush>
            <CornerRadius x:Key="corner_radius">10</CornerRadius>
            <Storyboard x:Key="DragEnter_Transition">
                <DoubleAnimation From="0" To="200" Duration="0:0:0.2" Storyboard.TargetName="stackPanel" Storyboard.TargetProperty="Y"/>
            </Storyboard>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate TargetType="Button" x:Key="CustomButtonTemplate">
                <Grid>
                    <Grid.RenderTransform>
                        <ScaleTransform x:Name="GridScale"></ScaleTransform>
                    </Grid.RenderTransform>
                    <Grid.RenderTransformOrigin>
                        <Point>0.5, 0.5</Point>
                    </Grid.RenderTransformOrigin>
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="{StaticResource corner_radius}" >

                    </Border>
                    <Border x:Name="Front" Background="{StaticResource HoverColor}" Opacity="0" CornerRadius="{StaticResource corner_radius}">

                    </Border>
                    <Border x:Name="MainBorder" CornerRadius="{StaticResource corner_radius}" >
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <!--<Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>-->
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Cursor" Value="Hand"></Setter>
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="0" To="1" Storyboard.TargetName="Front" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2"></DoubleAnimation>
                                    <DoubleAnimation From="1" To="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2"></DoubleAnimation>
                                    <DoubleAnimation From="1" To="{StaticResource ScaleRatio}" Duration="0:0:0.2" Storyboard.TargetName="GridScale" Storyboard.TargetProperty="ScaleX"></DoubleAnimation>
                                    <DoubleAnimation From="1" To="{StaticResource ScaleRatio}" Duration="0:0:0.2" Storyboard.TargetName="GridScale" Storyboard.TargetProperty="ScaleY"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="1" To="0" Storyboard.TargetName="Front" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2"></DoubleAnimation>
                                    <DoubleAnimation From="0" To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2"></DoubleAnimation>
                                    <DoubleAnimation To="1" From="{StaticResource ScaleRatio}" Duration="0:0:0.2" Storyboard.TargetName="GridScale" Storyboard.TargetProperty="ScaleX"></DoubleAnimation>
                                    <DoubleAnimation To="1" From="{StaticResource ScaleRatio}" Duration="0:0:0.2" Storyboard.TargetName="GridScale" Storyboard.TargetProperty="ScaleY"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <!--<Style x:Key="CustomButton_Style" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="Template_Control" TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.RenderTransform>
                            <ScaleTransform x:Name="GridScale"></ScaleTransform>
                        </Grid.RenderTransform>
                        <Grid.RenderTransformOrigin>
                            <Point>0.5, 0.5</Point>
                        </Grid.RenderTransformOrigin>
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="{StaticResource corner_radius}">

                        </Border>
                        <Border x:Name="Front" Background="{StaticResource HoverColor}" Opacity="0" CornerRadius="{StaticResource corner_radius}">

                        </Border>
                        <Border Name="Back" CornerRadius="{Binding RelativeSource=  {x:Static RelativeSource.Self}, Path=ActualHeight}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Name="Co" To="#0096c7" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.2"></ColorAnimation>
                                        <DoubleAnimation From="0" To="1" Storyboard.TargetName="Front" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation From="1" To="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation From="1" To="{StaticResource ScaleRatio}" Duration="0:0:0.2" Storyboard.TargetName="GridScale" Storyboard.TargetProperty="ScaleX"></DoubleAnimation>
                                        <DoubleAnimation From="1" To="{StaticResource ScaleRatio}" Duration="0:0:0.2" Storyboard.TargetName="GridScale" Storyboard.TargetProperty="ScaleY"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="1" To="0" Storyboard.TargetName="Front" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation From="0" To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation To="1" From="{StaticResource ScaleRatio}" Duration="0:0:0.2" Storyboard.TargetName="GridScale" Storyboard.TargetProperty="ScaleX"></DoubleAnimation>
                                        <DoubleAnimation To="1" From="{StaticResource ScaleRatio}" Duration="0:0:0.2" Storyboard.TargetName="GridScale" Storyboard.TargetProperty="ScaleY"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
        </ResourceDictionary>
    </Application.Resources>
</Application>
